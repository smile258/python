os 是个包
包下的方法：https://www.cnblogs.com/onemorepoint/p/9132976.html(用于参考)
abspath返回一个目录的绝对路径
basename返回一个目录的基名
dirname返回一个目录的目录名
exists测试指定文件是否存在
getatime得到指定文件最后一次的访问时间
getctime得到指定文件最后一次的改变时间
getsize得到得到文件的大小
isabs测试参数是否是绝对路径
isdir测试指定参数是否是目录名
isfile测试指定参数是否是一个文件
islink测试指定参数是否是一个软链接
ismount测试指定参数是否是挂载点



#查找目录下的所有文件
import os
root_path=os.getcwd()
offset = len(root_path.split("\\"))
for root,dirs,files in os.walk(root_path):
    current_dir=root.split("\\")
    indent=len(current_dir)-offset
    print("\t"*indent,current_dir[-1])
    for f in files:
        print("\t"*(indent+1),f)
#查找
# try:
#     fp=open("a.txt")
#     fp.read()
# except:
#     print ("file not found")
# finally:
#     try:
#         fp.close()
#     except:
#         print("can not close file")
#chardet是可以在cmd上添加这个插件，pip install chardet，进行安装，然后用import查找一下，看可以用不。
from chardet import detect
count,balanks=0,0
with open("a.txt","rb") as fp:
    encode=detect(fp.read())["encoding"]
#下面第一句用二进制输出
print(fp.read())
    print(encode)
    fp.close()
with open("a.txt","r",encoding=encode) as fp:
    while True:
        line=fp.readline()
        if not line:
            break
        count+=1
        if not (len(line.strip())):
            balanks+=1
print(count,balanks)
执行结果
b''
ascii
1 0
#######
import os
from chardet import detect
with open("a.txt","rb") as fp:
    encode=detect(fp.read())['encoding']
    print("encoding",encode)
line_count,blank_count = 0,0
with open("a.txt") as fp:
    while True:
        line = fp.readline()
        if not line:
            break
        line_count+=1
        if len(line.strip())==0:
            blank_count+=1
print(line_count,"lies(",blank_count,"blanks)")
执行结果
encoding ascii
1 lies( 0 blanks)
1 lies( 0 blanks)
#统计文件夹的个数，文件的个数
import os
from chardet import detect
#isfile()这个函数是看给的路径对不，如果对，就返回ture，不对就返回fase
#a = os.path.isfile(r"C:\Users\Administrator\Desktop\root\a.txt")
root_path = os.getcwd()
dir_count,file_count = 0,0
for root,dirs,files in os.walk(root_path):
#os.path.isfile()检查该文件是否存在
#os.access()判断当前用户是否有权限读取该文件
    if not os.path.isfile(root):
        dir_count += 1
    for f in files:
        if os.path.isfile(os.path.join(root,f)):
            file_count =+ 1
print(dir_count-1,"Folders")
print(file_count,"Files")
# 文件的基本信息
import os
from chardet import detect



#isfile()这个函数是看给的路径对不，如果对，就返回ture，不对就返回fase
#a = os.path.isfile(r"C:\Users\Administrator\Desktop\root\a.txt")
root_path = os.getcwd()
dir_count,file_count = 0,0
#如果将这个程序打包到一个文件中，就把print改为句柄值，将所有的“，”转变位“+”，将所有的int转换位str
#info = open('filename','w')
for root,dirs,files in os.walk(root_path):
    if not os.path.isfile(root):
        dir_count += 1
    for f in files:
        file_path = os.path.join(root,f )
        if os.path.isfile(file_path):
            file_count += 1
    print("filename",os.path.splitext(f)[0])
    print("type",os.path.splitext(f)[-1])
    print("size:",os.path.getsize(file_path),"Bytes")
    print("location:",root)
    #get__file__info(file_path)
    print("_"*60)
print(dir_count-1,"Folders")
print(file_count,"Files")
执行结果
C:\Users\Administrator\AppData\Local\Programs\Python\Python37\python.exe C:/Users/Administrator/Desktop/root/3.py
filename filename
type 
size: 0 Bytes
location: C:\Users\Administrator\Desktop\root
____________________________________________________________
filename cp4_find_max
type .c
size: 416 Bytes
location: C:\Users\Administrator\Desktop\root\dir1
____________________________________________________________
filename cp3_type_conversion
type .c
size: 863 Bytes
location: C:\Users\Administrator\Desktop\root\dir2
____________________________________________________________
filename cp4_if_leapyear
type .c
size: 226 Bytes
location: C:\Users\Administrator\Desktop\root\dir2\dir2_1
____________________________________________________________
filename cp6_2d_array_initialization
type .c
size: 1108 Bytes
location: C:\Users\Administrator\Desktop\root\dir3
____________________________________________________________
filename cp5_for_demo
type .c
size: 794 Bytes
location: C:\Users\Administrator\Desktop\root\dir3\dir3_1
____________________________________________________________
filename cp5_while_demo
type .c
size: 751 Bytes
location: C:\Users\Administrator\Desktop\root\dir3\dir3_2
____________________________________________________________
filename cp5_while_demo
type .c
size: 751 Bytes
location: C:\Users\Administrator\Desktop\root\新建文件夹
____________________________________________________________
7 Folders
22 Files

Process finished with exit code 0
最后的执行代码，出来所有的文件夹所有的信息
import os
from chardet import detect


def get_file_info(file_path):
    with open(file_path, "rb") as fp:
        encode = detect(fp.read())['encoding']
        info.write("Encoding:" + str(encode))

    line_count, blank_count = 0, 0
    with open(file_path, 'r', encoding=encode) as fp:
        while True:
            line = fp.readline()
            if not line:
                break
            line_count += 1
            if len(line.strip()) == 0:
                blank_count += 1
    info.write(str(line_count) + "Lines(" + str(blank_count) + "blanks)")


root_path = os.getcwd()
dir_count, file_count = 0, 0.
info = open("file_info.txt", 'w')
for root, dirs, files in os.walk(root_path):
    if not os.path.isfile(root):
        dir_count += 1
    for f in files:
        file_path = os.path.join(root, f)
        if os.path.isfile(file_path):
            file_count += 1
        info.write("Filename" + os.path.splitext(f)[0])
        info.write("Type" + os.path.splitext(f)[1])
        info.write("Size:" + str(os.path.getsize(file_path)) + "Bytes")
        info.write("Location:" + root)
        get_file_info(file_path)
        info.write("-" * 60)
info.write(str(dir_count - 1) + "Folders")
info.write(str(file_count) + "Files")

root_path = os.getcwd()
offset = len(root_path.split("\\"))
for root, dirs, files in os.walk(root_path):
    current_path = root.split("\\")
    level = len(current_path) - offset
    info.write("\t" * level + "\\" + current_path[-1])
    for f in files:
        info.write("\t" * (level + 1) + f)
 执行结果是在root文件夹里有一个file_info的文本文档
